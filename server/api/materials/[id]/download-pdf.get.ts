import { PrismaClient } from "@prisma/client";
import puppeteer from "puppeteer";

const prisma = new PrismaClient();

export default defineEventHandler(async (event) => {
  try {
    console.log("üîê PDF: –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF");

    const materialId = getRouterParam(event, "id");
    console.log("üîê PDF: materialId", materialId);

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è middleware)
    const user = event.context.user;
    console.log("üîê PDF: user", user ? "present" : "missing");

    if (!user) {
      throw createError({
        statusCode: 401,
        statusMessage: "Unauthorized",
      });
    }

    const userId = user.id;
    console.log("üîê PDF: userId", userId);

    // –ü–æ–ª—É—á–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log("üîê PDF: –ü–æ–ª—É—á–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –∏–∑ –ë–î");
    const material = await prisma.material.findUnique({
      where: {
        id: materialId,
        isActive: true,
      },
    });

    console.log("üîê PDF: material", material ? "found" : "not found");

    if (!material) {
      throw createError({
        statusCode: 404,
        statusMessage: "Material not found",
      });
    }

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    console.log("üîê PDF: –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ –ë–î");
    await prisma.materialDownload.create({
      data: {
        materialId,
        userId,
      },
    });
    console.log("üîê PDF: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ë–î");

    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è PDF
    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="UTF-8">
          <title>${material.title}</title>
          <style>
            body {
              font-family: 'Arial', sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 800px;
              margin: 0 auto;
              padding: 40px 20px;
            }
            h1 {
              color: #2c3e50;
              border-bottom: 3px solid #3498db;
              padding-bottom: 10px;
              margin-bottom: 30px;
            }
            .material-info {
              background: #f8f9fa;
              padding: 20px;
              border-radius: 8px;
              margin-bottom: 30px;
            }
            .material-type {
              display: inline-block;
              background: #3498db;
              color: white;
              padding: 4px 12px;
              border-radius: 20px;
              font-size: 12px;
              margin-right: 10px;
            }
            .material-category {
              display: inline-block;
              background: #e74c3c;
              color: white;
              padding: 4px 12px;
              border-radius: 20px;
              font-size: 12px;
            }
            .content {
              background: white;
              padding: 30px;
              border-radius: 8px;
              box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            }
            .footer {
              margin-top: 40px;
              text-align: center;
              color: #7f8c8d;
              font-size: 12px;
              border-top: 1px solid #ecf0f1;
              padding-top: 20px;
            }
          </style>
        </head>
        <body>
          <h1>${material.title}</h1>
          
          <div class="material-info">
            <div class="material-type">${getTypeText(material.type)}</div>
            <div class="material-category">${material.category}</div>
            <p><strong>–°—Ç—Ä–∞–Ω–∏—Ü:</strong> ${material.pages}</p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${material.description}</p>
          </div>
          
          <div class="content">
            ${material.content}
          </div>
          
          <div class="footer">
            <p>–°–∫–∞—á–∞–Ω–æ —Å K-Studio</p>
            <p>–î–∞—Ç–∞: ${new Date().toLocaleDateString("ru-RU")}</p>
          </div>
        </body>
      </html>
    `;

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF —Å –ø–æ–º–æ—â—å—é Puppeteer
    console.log("üîê PDF: –ó–∞–ø—É—Å–∫–∞–µ–º Puppeteer");
    const browser = await puppeteer.launch({
      headless: true,
      args: [
        "--no-sandbox",
        "--disable-setuid-sandbox",
        "--disable-dev-shm-usage",
      ],
    });
    console.log("üîê PDF: Puppeteer –∑–∞–ø—É—â–µ–Ω");

    const page = await browser.newPage();
    console.log("üîê PDF: –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞");

    await page.setContent(htmlContent, { waitUntil: "networkidle0" });
    console.log("üîê PDF: HTML –∫–æ–Ω—Ç–µ–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");

    console.log("üîê PDF: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF");
    const pdfBuffer = await page.pdf({
      format: "A4",
      margin: {
        top: "20mm",
        right: "20mm",
        bottom: "20mm",
        left: "20mm",
      },
      printBackground: true,
    });
    console.log("üîê PDF: PDF —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, —Ä–∞–∑–º–µ—Ä:", pdfBuffer.length);

    await browser.close();
    console.log("üîê PDF: –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    setHeader(event, "Content-Type", "application/pdf");

    // –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const safeFileName = material.title
      .replace(/[^a-zA-Z0-9\s]/g, "")
      .replace(/\s+/g, "_")
      .toLowerCase();

    setHeader(
      event,
      "Content-Disposition",
      `attachment; filename="${safeFileName}.pdf"`
    );
    setHeader(event, "Content-Length", pdfBuffer.length.toString());

    return pdfBuffer;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:", error);
    throw createError({
      statusCode: 500,
      statusMessage: "Error generating PDF",
    });
  }
});

function getTypeText(type) {
  const texts = {
    checklist: "–ß–µ–∫-–ª–∏—Å—Ç",
    template: "–®–∞–±–ª–æ–Ω",
    architecture: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
    guide: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
  };
  return texts[type] || type;
}

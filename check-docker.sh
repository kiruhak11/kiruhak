#!/bin/bash

echo "=== Docker System Check ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ Container Status:"
docker-compose ps

echo ""
echo "üîç Container Logs:"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üì± App Container Logs (last 20 lines):"
docker-compose logs --tail=20 app

echo ""
echo "üóÑÔ∏è Database Container Logs (last 10 lines):"
docker-compose logs --tail=10 postgres

echo ""
echo "ü§ñ Bot Container Logs (last 10 lines):"
docker-compose logs --tail=10 bot

echo ""
echo "üåê Health Check:"
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
if curl -f http://localhost:3015/api/health > /dev/null 2>&1; then
    echo "‚úÖ API is accessible"
else
    echo "‚ùå API is not accessible"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
if curl -f http://localhost:3015/api/health/db > /dev/null 2>&1; then
    echo "‚úÖ Database health check passed"
else
    echo "‚ùå Database health check failed"
fi

echo ""
echo "üîß Environment Variables:"
echo "DATABASE_URL: ${DATABASE_URL:-'not set'}"
echo "TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:+'set'}"
echo "NODE_ENV: ${NODE_ENV:-'not set'}"

echo ""
echo "=== Check Complete ==="

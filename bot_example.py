#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä Telegram –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ @gs_company_bot
"""

import requests
import json
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "6122558496:AAEXwnP3E4uIk5sSSNzD-13vQK6A4ybCBFI")
API_URL = os.getenv("API_URL", "http://app:3015/api/auth/create-account")

async def create_user_account(telegram_id, first_name, last_name, username):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API"""
    data = {
        "telegramId": str(telegram_id),
        "firstName": first_name,
        "lastName": last_name or "",
        "username": username or ""
    }
    
    try:
        response = requests.post(API_URL, json=data, timeout=10)
        result = response.json()
        
        if result["success"]:
            user = result["user"]
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞
            quick_token = f"{user['login']}:{user['password']}"
            
            return f"""
‚úÖ –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!

üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:
üîë –õ–æ–≥–∏–Ω: `{user['login']}`
üîê –ü–∞—Ä–æ–ª—å: `{user['password']}`
üí∞ –ë–∞–ª–∞–Ω—Å: {user['balance'] / 100} ‚ÇΩ

üöÄ –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥:
`{quick_token}`

üåê –í–æ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ: https://kiruhak11.ru/login

üìä –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ:
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–∞–π—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏—è
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
            """
        else:
            if "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in result["error"]:
                return f"""
‚ÑπÔ∏è –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!

üîë –í–∞—à –ª–æ–≥–∏–Ω: `{result['login']}`
üåê –í–æ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ: http://localhost:3000/login

–ï—Å–ª–∏ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
                """
            else:
                return f"‚ùå –û—à–∏–±–∫–∞: {result['error']}"
                
    except requests.exceptions.Timeout:
        return "‚ùå –û—à–∏–±–∫–∞: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"
    except requests.exceptions.ConnectionError:
        return "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
    except requests.exceptions.RequestException as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}"
    except Exception as e:
        return f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    welcome_message = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–∞–π—Ç–æ–≤!

üìã –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
‚Ä¢ üéÅ 150 —Ä—É–±–ª–µ–π –Ω–∞ –±–∞–ª–∞–Ω—Å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
‚Ä¢ üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏–π –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤  
‚Ä¢ üìà –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ üí≥ –°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤ (100‚ÇΩ –∑–∞ —Å–∞–π—Ç)

–°–æ–∑–¥–∞—é –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç...
    """
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(welcome_message)
    
    # –°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    account_message = await create_user_account(
        telegram_id=user.id,
        first_name=user.first_name,
        last_name=user.last_name,
        username=user.username
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
    await update.message.reply_text(account_message, parse_mode='Markdown')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É

üîπ /start - –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –≤ —Å–∏—Å—Ç–µ–º–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
üîπ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üåê –°–∞–π—Ç: http://localhost:3000
üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @kiruhak11

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ:
‚Ä¢ –í–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–∞–π—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø–æ—Å–µ—â–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
    """
    
    await update.message.reply_text(help_text)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user = update.effective_user
    message_text = update.message.text
    
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, —Å–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç
    if not message_text.startswith('/'):
        await start_command(update, context)

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    error = context.error
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã getUpdates
    if "Conflict: terminated by other getUpdates request" in str(error):
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç getUpdates - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
        return
    
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç—ã
    if "Timed out" in str(error):
        print("‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
        return
    
    print(f"‚ùå –û—à–∏–±–∫–∞: {error}")
    
    if update and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
        except:
            pass

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = Application.builder().token(BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        app.add_handler(CommandHandler("start", start_command))
        app.add_handler(CommandHandler("help", help_command))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        app.add_error_handler(error_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        app.run_polling(
            poll_interval=1,
            drop_pending_updates=True
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞")
        print("2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("3. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram API")
        print("4. –ù–µ—Ç –ª–∏ –¥—Ä—É–≥–∏—Ö –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞")

if __name__ == "__main__":
    main()

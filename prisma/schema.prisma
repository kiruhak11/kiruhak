generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id               String   @id @default(cuid())
  title            String
  description      String
  shortDescription String
  image            String
  technologies     String[]
  category         String
  client           String?
  duration         String?
  budget           String?
  features         String[]
  challenges       String?
  solutions        String?
  results          String?
  liveUrl          String?
  githubUrl        String?
  featured         Boolean  @default(false)
  order            Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("projects")
}

model User {
  id                    String    @id @default(cuid())
  telegramId            String    @unique
  username              String?
  firstName             String?
  lastName              String?
  photoUrl              String?
  login                 String    @unique // Логин для входа
  password              String    // Хешированный пароль
  isAdmin               Boolean   @default(false)
  balance               Int       @default(15000) // Баланс в копейках (15000 = 150 рублей)
  isSubscribed          Boolean   @default(false) // Подписка на Telegram канал
  subscriptionCheckedAt DateTime? // Время последней проверки подписки
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  sites Site[]
  transactions Transaction[]
  tutorialProgress TutorialProgress[]
  materialRatings MaterialRating[]
  materialDownloads MaterialDownload[]

  @@map("users")
}

model Site {
  id          String   @id @default(cuid())
  name        String
  domain      String   @unique
  description String?
  isActive    Boolean  @default(true)
  userId      String   // Владелец сайта
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  visits Visit[]

  @@map("sites")
}

model Visit {
  id        String   @id @default(cuid())
  siteId    String
  page      String   @default("/")
  referrer  String?
  userAgent String
  ip        String
  timestamp DateTime @default(now())
  sessionId String?
  userId    String?

  site Site @relation(fields: [siteId], references: [id], onDelete: Cascade)

  @@map("visits")
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  type        String   // "credit" | "debit"
  amount      Int      // Сумма в копейках
  description String
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model UiComponent {
  id          String   @id @default(cuid())
  name        String   // Название компонента
  description String?  // Описание
  category    String   // Категория (buttons, inputs, cards, etc.)
  code        String   // HTML/CSS/JS код компонента (для обратной совместимости)
  html        String?  // HTML код компонента
  css         String?  // CSS код компонента
  js          String?  // JavaScript код компонента
  preview     String?  // URL превью изображения
  tags        String[] // Теги для поиска
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("ui_components")
}

model Tutorial {
  id          String   @id @default(cuid())
  title       String
  description String
  difficulty  String   // "beginner" | "intermediate" | "advanced"
  category    String   // "vue" | "nuxt" | "typescript" | "performance"
  duration    String   // "15 мин", "25 мин", etc.
  features    String[]
  test        String?  // JSON с вопросами теста (для обратной совместимости)
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  steps TutorialStep[]
  userProgress TutorialProgress[]
  testQuestions TutorialTestQuestion[]

  @@map("tutorials")
}

model TutorialStep {
  id         String   @id @default(cuid())
  tutorialId String
  title      String
  content    String   // HTML контент шага
  order      Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  tutorial Tutorial @relation(fields: [tutorialId], references: [id], onDelete: Cascade)

  @@map("tutorial_steps")
}

model TutorialProgress {
  id          String    @id @default(cuid())
  tutorialId  String
  userId      String
  completed   Boolean   @default(false)
  completedAt DateTime?
  testScore   Int?      // Результат теста в процентах
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  tutorial Tutorial @relation(fields: [tutorialId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([tutorialId, userId])

  @@map("tutorial_progress")
}

model TutorialTestQuestion {
  id          String   @id @default(cuid())
  tutorialId  String
  question    String
  type        String   // "single" | "multiple" | "text"
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tutorial Tutorial @relation(fields: [tutorialId], references: [id], onDelete: Cascade)
  answers   TutorialTestAnswer[]

  @@map("tutorial_test_questions")
}

model TutorialTestAnswer {
  id          String   @id @default(cuid())
  questionId  String
  answer      String
  isCorrect   Boolean  @default(false)
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  question TutorialTestQuestion @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("tutorial_test_answers")
}

model Material {
  id          String   @id @default(cuid())
  title       String
  description String
  type        String   // "checklist" | "template" | "architecture" | "guide"
  category    String   // "performance" | "security" | "ui" | "deployment"
  pages       Int
  features    String[]
  content     String   // HTML контент материала
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ratings   MaterialRating[]
  downloads MaterialDownload[]

  @@map("materials")
}

model MaterialRating {
  id         String   @id @default(cuid())
  materialId String
  userId     String
  rating     Int      // Оценка от 1 до 5
  createdAt  DateTime @default(now())

  material Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([materialId, userId])

  @@map("material_ratings")
}

model MaterialDownload {
  id         String   @id @default(cuid())
  materialId String
  userId     String
  createdAt  DateTime @default(now())

  material Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("material_downloads")
}

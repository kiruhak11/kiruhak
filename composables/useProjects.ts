import { ref, readonly } from "vue";

interface Project {
  id: string;
  title: string;
  description: string;
  image: string;
  technologies: string[];
  category: string;
  featured: boolean;
  order: number;
  liveUrl?: string;
  githubUrl?: string;
  createdAt: string;
  updatedAt: string;
}

export const useProjects = () => {
  const projects = ref<Project[]>([]);
  const loading = ref(false);
  const error = ref<string | null>(null);

  const fetchProjects = async () => {
    loading.value = true;
    error.value = null;

    try {
      const response = await $fetch("/api/projects");
      projects.value = response;
    } catch (err) {
      error.value = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–æ–≤";
      console.error("Error fetching projects:", err);
    } finally {
      loading.value = false;
    }
  };

  const fetchProject = async (id: string) => {
    loading.value = true;
    error.value = null;

    try {
      const response = await $fetch(`/api/projects/${id}`);
      return response;
    } catch (err) {
      error.value = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–µ–∫—Ç–∞";
      console.error("Error fetching project:", err);
      return null;
    } finally {
      loading.value = false;
    }
  };

  const createProject = async (
    projectData: Omit<Project, "id" | "createdAt" | "updatedAt">
  ) => {
    loading.value = true;
    error.value = null;

    try {
      console.log(`üîê useProjects: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:`, projectData);

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
      let headers = {};
      if (process.client) {
        const token = localStorage.getItem("auth_token");
        if (token) {
          headers = { Authorization: `Bearer ${token}` };
          console.log(`üîê useProjects: –î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –∫ –∑–∞–ø—Ä–æ—Å—É —Å–æ–∑–¥–∞–Ω–∏—è`);
        } else {
          console.log(`üîê useProjects: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è`);
        }
      }

      const response = await $fetch("/api/projects", {
        method: "POST",
        body: projectData,
        headers,
      });
      console.log(`üîê useProjects: –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω`);
      await fetchProjects(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      return response;
    } catch (err) {
      console.error("Error creating project:", err);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (err.status === 401) {
        error.value = "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.";
        console.log("üîê useProjects: 401 –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞");
      } else if (err.status === 403) {
        error.value = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.";
      } else {
        error.value = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞";
      }

      return null;
    } finally {
      loading.value = false;
    }
  };

  const updateProject = async (id: string, projectData: Partial<Project>) => {
    loading.value = true;
    error.value = null;

    try {
      console.log(
        `üîê useProjects: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ ${id} —Å –¥–∞–Ω–Ω—ã–º–∏:`,
        projectData
      );

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
      let headers = {};
      if (process.client) {
        const token = localStorage.getItem("auth_token");
        if (token) {
          headers = { Authorization: `Bearer ${token}` };
          console.log(`üîê useProjects: –î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –∫ –∑–∞–ø—Ä–æ—Å—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è`);
        } else {
          console.log(`üîê useProjects: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è`);
        }
      }

      const response = await $fetch(`/api/projects/${id}`, {
        method: "PUT",
        body: projectData,
        headers,
      });
      console.log(`üîê useProjects: –ü—Ä–æ–µ–∫—Ç ${id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω`);
      await fetchProjects(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      return response;
    } catch (err) {
      console.error("Error updating project:", err);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (err.status === 401) {
        error.value = "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.";
        console.log("üîê useProjects: 401 –æ—à–∏–±–∫–∞ - –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –≤ localStorage
        if (process.client) {
          const token = localStorage.getItem("auth_token");
          if (!token) {
            console.log("üîê useProjects: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ localStorage");
          } else {
            console.log(
              "üîê useProjects: –¢–æ–∫–µ–Ω –µ—Å—Ç—å –≤ localStorage, –Ω–æ —Å–µ—Ä–≤–µ—Ä –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç"
            );
          }
        }
      } else if (err.status === 403) {
        error.value = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.";
      } else {
        error.value = "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞";
      }

      return null;
    } finally {
      loading.value = false;
    }
  };

  const deleteProject = async (id: string) => {
    loading.value = true;
    error.value = null;

    try {
      console.log(`üîê useProjects: –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ ${id}`);

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
      let headers = {};
      if (process.client) {
        const token = localStorage.getItem("auth_token");
        if (token) {
          headers = { Authorization: `Bearer ${token}` };
          console.log(`üîê useProjects: –î–æ–±–∞–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –∫ –∑–∞–ø—Ä–æ—Å—É —É–¥–∞–ª–µ–Ω–∏—è`);
        } else {
          console.log(`üîê useProjects: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è`);
        }
      }

      await $fetch(`/api/projects/${id}`, {
        method: "DELETE",
        headers,
      });
      console.log(`üîê useProjects: –ü—Ä–æ–µ–∫—Ç ${id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
      await fetchProjects(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      return true;
    } catch (err) {
      console.error("Error deleting project:", err);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (err.status === 401) {
        error.value = "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.";
        console.log("üîê useProjects: 401 –æ—à–∏–±–∫–∞ - –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –≤ localStorage
        if (process.client) {
          const token = localStorage.getItem("auth_token");
          if (!token) {
            console.log("üîê useProjects: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ localStorage");
          } else {
            console.log(
              "üîê useProjects: –¢–æ–∫–µ–Ω –µ—Å—Ç—å –≤ localStorage, –Ω–æ —Å–µ—Ä–≤–µ—Ä –µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç"
            );
          }
        }
      } else if (err.status === 403) {
        error.value = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞.";
      } else {
        error.value = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞";
      }

      return false;
    } finally {
      loading.value = false;
    }
  };

  return {
    projects: readonly(projects),
    loading: readonly(loading),
    error: readonly(error),
    fetchProjects,
    fetchProject,
    createProject,
    updateProject,
    deleteProject,
  };
};
